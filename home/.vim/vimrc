noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>


" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

execute pathogen#infect()

" Make backspace behave in a sane manner.
set backspace=indent,eol,start

" Switch syntax highlighting on
syntax on

" Enable file type detection and do language-dependent indenting.
filetype plugin indent on

" Always show the status line
set laststatus=2

" Always show the cursor position
set ruler

" Tabs
set tabstop=2 softtabstop=2 shiftwidth=2 expandtab

" Enable the mouse
set mouse=a

" Line numbers
set number

" Don't let it touch the edge!
set scrolloff=2

" No swapfiles
"set noswapfile

" Dedicated backup folder
set backupdir=~/.vim/backup

" Trying out a title
set title

" Indentation
set autoindent
set smartindent

" Searching
set ignorecase
set smartcase

" Split in a sensible manner
set splitbelow
set splitright

" More effective block editing
set virtualedit=block

" Pretty colors!
colorscheme molokai
set background=dark

""""""""""""""""""""""""""""""
" airline
""""""""""""""""""""""""""""""
let g:airline_theme             = 'powerlineish'
let g:airline_enable_branch     = 1
let g:airline_enable_syntastic  = 1
let g:airline_powerline_fonts   = 1
" airline handles this
set noshowmode

"" vim-powerline symbols
" let g:airline_left_sep          = '⮀'
" let g:airline_left_alt_sep      = '⮁'
" let g:airline_right_sep         = '⮂'
" let g:airline_right_alt_sep     = '⮃'
" let g:airline_branch_prefix     = '⭠'
" let g:airline_readonly_symbol   = '⭤'
" let g:airline_linecolumn_prefix = '⭡'

"
" Mostly from http://sheerun.net/2014/03/21/how-to-boost-your-vim-productivity/
"
" Much more convienient than \
let mapleader = "\<Space>"

" Faster save and quit
nnoremap <Leader>w :w<CR>
nnoremap <Leader>q :q<CR>

" Write, darn you!
nnoremap <Leader>W :w!<CR>
" Die!
nnoremap <Leader>Q :q!<CR>

" Copy and paste to system clipboard with leader
vmap <Leader>y "*y
vmap <Leader>d "*d
nmap <Leader>p "*p
nmap <Leader>P "*P
vmap <Leader>p "*p
vmap <Leader>P "*P


" Use mode-dependent cursor
let &t_ti.=system('tput cbb')
let &t_SI.=system('tput cbl')
let &t_EI.=system('tput cbb')
let &t_te.=system('tput crs')

" Standard shell-like path completion
set wildmenu
set wildmode=list:longest
